// Generated by CoffeeScript 1.6.3
(function() {
  var Kaleidoverse;

  window.Kaleidoverse = Kaleidoverse = (function() {
    function Kaleidoverse() {
      window.say = console.log;
      $.cookie.json = true;
      this.github_owner = 'veradox';
      this.github_repo = 'kaleidoverse';
    }

    Kaleidoverse.prototype.run = function() {
      this.state = $.cookie('state');
      if (this.state) {
        this.display('main');
        return this.github = new Github({
          token: this.state.token,
          auth: "oauth"
        });
      } else {
        return this.display('login');
      }
    };

    Kaleidoverse.prototype.display = function(view) {
      return $('.primary-content').html(Jemplate.process("" + view + ".html", this.state));
    };

    Kaleidoverse.prototype.lightbox = function(view) {
      return $.colorbox({
        html: Jemplate.process("" + view + ".html", this.state),
        height: '50%',
        width: '50%'
      });
    };

    Kaleidoverse.prototype.do_token_login = function() {
      var login, state, token;
      this.clear_errors();
      login = $("input[name$='login']").val() || '';
      token = $("input[name$='token']").val() || '';
      if (!(login.length > 0)) {
        this.error("GitHub Login Id value is required");
      }
      if (!(token.length > 0)) {
        this.error("GitHub Auth Token value is required");
      }
      if (this.errors) {
        return $("button[name$='login']").click(this.do_token_login);
      } else {
        $.colorbox.close();
        state = {
          token: token,
          login: login
        };
        $.cookie('state', state, {
          path: '/'
        });
        return this.run();
      }
    };

    Kaleidoverse.prototype.do_logout = function() {
      $.removeCookie('state', {
        path: '/'
      });
      return this.run();
    };

    Kaleidoverse.prototype.do_fork = function() {
      var _this = this;
      this.repo = this.github.getRepo(this.github_owner, this.github_repo);
      return this.repo.fork(function(err) {
        if (err) {
          return _this.error(JSON.parse(err.request.response).message);
        } else {
          $.colorbox.close();
          return _this.log("Successfully forked '" + _this.github_owner + "/" + _this.github_repo + "'");
        }
      });
    };

    Kaleidoverse.prototype.clear_errors = function() {
      $('.errors').html('');
      return this.errors = false;
    };

    Kaleidoverse.prototype.error = function(message) {
      $('.errors').append("<p>Error: " + message + "</p>");
      return this.errors = true;
    };

    Kaleidoverse.prototype.log = function(message) {
      return $('.log').append("<p>Event: " + message + "</p>");
    };

    return Kaleidoverse;

  })();

  window.kaleidoverse = function() {
    window.ko = new Kaleidoverse;
    return ko.run();
  };

}).call(this);
