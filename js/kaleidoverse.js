// Generated by CoffeeScript 1.6.3
(function() {
  var Kaleidoverse;

  window.Kaleidoverse = Kaleidoverse = (function() {
    function Kaleidoverse() {
      $.cookie.json = true;
      this.github_owner = 'veradox';
      this.github_repo = 'kaleidoverse';
    }

    Kaleidoverse.prototype.run = function() {
      var login;
      login = $.cookie('login');
      if (login) {
        this.display('main', {
          'login': login
        });
        return this.github = new Github({
          token: login.auth_token,
          auth: "oauth"
        });
      } else {
        if ($.url().param('code')) {
          alert(String($.url()));
        }
        return this.display('login');
      }
    };

    Kaleidoverse.prototype.display = function(view, data) {
      return $('.primary-content').html(Jemplate.process(view + '.html', data));
    };

    Kaleidoverse.prototype.do_login = function() {
      var login, token;
      window.location = 'https://github.com/login/oauth/authorize?' + 'client_id=fdb1df3dcaddfef441ee;' + 'redirect_uri=https://veradox.github.io/kaleidoverse;' + 'state=unguessable_string';
      token = $("input[name$='token']").val();
      if (token) {
        login = {
          auth_token: token
        };
        $.cookie('login', login, {
          path: '/'
        });
        return this.run();
      }
    };

    Kaleidoverse.prototype.do_logout = function() {
      $.removeCookie('login', {
        path: '/'
      });
      return this.run();
    };

    Kaleidoverse.prototype.do_fork = function() {
      this.repo = this.github.getRepo(this.github_owner(this.github_repo));
      return this.repo.fork(function(err) {
        if (err) {
          return console.log(err);
        } else {
          return alert("You Forked Me!");
        }
      });
    };

    return Kaleidoverse;

  })();

  window.kaleidoverse = function() {
    window.ko = new Kaleidoverse;
    return ko.run();
  };

}).call(this);
